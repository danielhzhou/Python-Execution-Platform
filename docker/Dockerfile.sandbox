FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV TERM=xterm-256color

# Install system dependencies and development tools
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    wget \
    git \
    nano \
    vim \
    tree \
    htop \
    procps \
    make \
    gcc \
    g++ \
    unzip \
    zip \
    jq \
    sqlite3 \
    ca-certificates \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js using NodeSource repository (more reliable)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g npm@latest \
    && npm install -g yarn pnpm \
    && node --version \
    && npm --version \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user with home directory first
RUN groupadd -r pyuser && useradd -r -g pyuser -u 1000 -m pyuser

# Create workspace directory and set permissions
RUN mkdir -p /workspace && chown pyuser:pyuser /workspace

# Set working directory
WORKDIR /workspace

# Switch to non-root user BEFORE installing Python packages
USER pyuser

# Install Python packages as the non-root user
RUN pip install --user --no-cache-dir \
    pandas==2.1.4 \
    scipy==1.11.4 \
    numpy==1.25.2 \
    matplotlib==3.8.2 \
    seaborn==0.13.0 \
    scikit-learn==1.3.2 \
    requests==2.31.0 \
    jupyter==1.0.0 \
    ipython==8.18.1 \
    pytest==7.4.3 \
    black==23.11.0 \
    flake8==6.1.0 \
    mypy==1.7.1 \
    flask==3.0.0 \
    fastapi==0.109.0 \
    sqlalchemy==2.0.25 \
    pydantic==2.5.3

# Add user's local bin to PATH for pip-installed executables
ENV PATH="/home/pyuser/.local/bin:$PATH"

# Set up Node.js environment for user with optimizations
RUN mkdir -p /home/pyuser/.npm-global \
    && mkdir -p /home/pyuser/.npm-cache \
    && npm config set prefix '/home/pyuser/.npm-global' \
    && npm config set cache '/home/pyuser/.npm-cache' \
    && echo 'export PATH=/home/pyuser/.npm-global/bin:$PATH' >> /home/pyuser/.bashrc \
    && echo 'export NPM_CONFIG_CACHE=/home/pyuser/.npm-cache' >> /home/pyuser/.bashrc

# Add Node.js project optimization aliases and functions
RUN echo 'alias npm-clean="rm -rf node_modules package-lock.json && npm cache clean --force"' >> /home/pyuser/.bashrc \
    && echo 'alias npm-light="npm install --production --no-optional --no-audit --no-fund"' >> /home/pyuser/.bashrc \
    && echo 'alias npm-dev="npm install --only=dev --no-audit --no-fund"' >> /home/pyuser/.bashrc \
    && echo '' >> /home/pyuser/.bashrc \
    && echo '# Function to safely install npm packages with size limits' >> /home/pyuser/.bashrc \
    && echo 'npm-safe() {' >> /home/pyuser/.bashrc \
    && echo '  echo "🚀 Installing packages with optimizations..."' >> /home/pyuser/.bashrc \
    && echo '  npm install --no-audit --no-fund --prefer-offline "$@"' >> /home/pyuser/.bashrc \
    && echo '  echo "📊 Checking node_modules size..."' >> /home/pyuser/.bashrc \
    && echo '  if [ -d "node_modules" ]; then' >> /home/pyuser/.bashrc \
    && echo '    size=$(du -sh node_modules 2>/dev/null | cut -f1)' >> /home/pyuser/.bashrc \
    && echo '    echo "📦 node_modules size: $size"' >> /home/pyuser/.bashrc \
    && echo '    echo "💡 Tip: Use npm-light for production-only deps"' >> /home/pyuser/.bashrc \
    && echo '  fi' >> /home/pyuser/.bashrc \
    && echo '}' >> /home/pyuser/.bashrc

# Add welcome message to bashrc
RUN echo 'echo "🐍 Python + Node.js Development Environment Ready!"' >> /home/pyuser/.bashrc && \
    echo 'echo "🐍 Python: $(python --version)"' >> /home/pyuser/.bashrc && \
    echo 'echo "📦 Node.js: $(node --version) | npm: $(npm --version)"' >> /home/pyuser/.bashrc && \
    echo 'echo "📚 Pre-installed: pandas, numpy, matplotlib, scikit-learn, flask, fastapi"' >> /home/pyuser/.bashrc && \
    echo 'echo "🛠️  Available: python, pip, node, npm, yarn, git, nano, vim, curl, wget"' >> /home/pyuser/.bashrc && \
    echo 'echo "📁 Working directory: /workspace"' >> /home/pyuser/.bashrc && \
    echo 'echo "🌐 Package installation: pip, npm, yarn, git clone"' >> /home/pyuser/.bashrc && \
    echo 'echo "🛡️  Node.js helpers: npm-safe, npm-light, npm-clean"' >> /home/pyuser/.bashrc && \
    echo 'echo ""' >> /home/pyuser/.bashrc

# Default command
CMD ["/bin/bash"] 